#ifndef		CHARSET_SPECIAL
	#define		CHARSET_SPECIAL

	static const char *charset_spec_backspace[] =
	{
		/* width height num_colors chars_per_pixel */
		"    16    16        2            1",
		/* colors */
		"0 c #000000",
		". c #ffffff",
		/* pixels */
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"00...00...00...0",
		"00...00...00...0",
		"0000000000000000",
		"0,0"
	};

	static const char *charset_spec_underscore[] =
	{
		/* width height num_colors chars_per_pixel */
		"    16    16        2            1",
		/* colors */
		"0 c #000000",
		". c #ffffff",
		/* pixels */
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"................",
		"................",
		"0000000000000000",
		"0,0"
	};

	static const char *charset_spec_slash[] =
	{
		/* width height num_colors chars_per_pixel */
		"    16    16        2            1",
		/* colors */
		"0 c #000000",
		". c #ffffff",
		/* pixels */
		"0000000000000000",
		"0000000000000000",
		"0000000000000..0",
		"000000000000..00",
		"00000000000..000",
		"0000000000..0000",
		"000000000..00000",
		"00000000..000000",
		"0000000..0000000",
		"000000..00000000",
		"00000..000000000",
		"0000..0000000000",
		"000..00000000000",
		"00..000000000000",
		"0000000000000000",
		"0000000000000000",
		"0,0"
	};

	static const char *charset_spec_antislash[] =
	{
		/* width height num_colors chars_per_pixel */
		"    16    16        2            1",
		/* colors */
		"0 c #000000",
		". c #ffffff",
		/* pixels */
        "0000000000000000",
		"0000000000000000",
		"0..0000000000000",
		"00..000000000000",
		"000..00000000000",
		"0000..0000000000",
		"00000..000000000",
		"000000..00000000",
		"0000000..0000000",
		"00000000..000000",
		"000000000..00000",
		"0000000000..0000",
		"00000000000..000",
		"000000000000..00",
		"0000000000000000",
		"0000000000000000",
		"0,0"
	};


	static const char *charset_spec_minus[] =
	{
		/* width height num_colors chars_per_pixel */
		"    16    16        2            1",
		/* colors */
		"0 c #000000",
		". c #ffffff",
		/* pixels */
        "0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"00............00",
		"00............00",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0,0"
	};

	static const char *charset_spec_plus[] =
	{
		/* width height num_colors chars_per_pixel */
		"    16    16        2            1",
		/* colors */
		"0 c #000000",
		". c #ffffff",
		/* pixels */
        "0000000000000000",
		"0000000000000000",
		"0000000..0000000",
		"0000000..0000000",
		"0000000..0000000",
		"0000000..0000000",
		"0000000..0000000",
		"00............00",
		"00............00",
		"0000000..0000000",
		"0000000..0000000",
		"0000000..0000000",
		"0000000..0000000",
		"0000000..0000000",
		"0000000000000000",
		"0000000000000000",
		"0,0"
	};

	static const char *charset_spec_pipe[] =
	{
		/* width height num_colors chars_per_pixel */
		"    16    16        2            1",
		/* colors */
		"0 c #000000",
		". c #ffffff",
		/* pixels */
        "0000000..0000000",
		"0000000..0000000",
		"0000000..0000000",
		"0000000..0000000",
		"0000000..0000000",
		"0000000..0000000",
		"0000000..0000000",
		"0000000..0000000",
		"0000000..0000000",
		"0000000..0000000",
		"0000000..0000000",
		"0000000..0000000",
		"0000000..0000000",
		"0000000..0000000",
		"0000000..0000000",
		"0000000..0000000",
		"0,0"
	};

	static const char *charset_spec_graveacc[] =
	{
		/* width height num_colors chars_per_pixel */
		"    16    16        2            1",
		/* colors */
		"0 c #000000",
		". c #ffffff",
		/* pixels */
        "0000000000000000",
		"0000000000000000",
		"00000..000000000",
		"000000..00000000",
		"0000000..0000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0,0"
	};


	static const char *charset_spec_open_parenthese[] =
	{
		/* width height num_colors chars_per_pixel */
		"    16    16        2            1",
		/* colors */
		"0 c #000000",
		". c #ffffff",
		/* pixels */
        "0000000000000000",
		"0000000000000000",
		"000000000..00000",
		"00000000..000000",
		"0000000..0000000",
		"000000..00000000",
		"00000..000000000",
		"00000..000000000",
		"00000..000000000",
		"00000..000000000",
		"000000..00000000",
		"0000000..0000000",
		"00000000..000000",
		"000000000..00000",
		"0000000000000000",
		"0000000000000000",
		"0,0"
	};


	static const char *charset_spec_close_parenthese[] =
	{
		/* width height num_colors chars_per_pixel */
		"    16    16        2            1",
		/* colors */
		"0 c #000000",
		". c #ffffff",
		/* pixels */
        "0000000000000000",
		"0000000000000000",
		"00000..000000000",
		"000000..00000000",
		"0000000..0000000",
		"00000000..000000",
		"000000000..00000",
		"000000000..00000",
		"000000000..00000",
		"000000000..00000",
		"000000000..00000",
		"00000000..000000",
		"0000000..0000000",
		"000000..00000000",
		"00000..000000000",
		"0000000000000000",
		"0,0"
	};

	static const char *charset_spec_open_bracket[] =
	{
		/* width height num_colors chars_per_pixel */
		"    16    16        2            1",
		/* colors */
		"0 c #000000",
		". c #ffffff",
		/* pixels */
        "0000000000000000",
		"0000000000000000",
		"000000.....00000",
		"00000..000000000",
		"00000..000000000",
		"00000..000000000",
		"00000..000000000",
		"000...0000000000",
		"000...0000000000",
		"00000..000000000",
		"00000..000000000",
		"00000..000000000",
		"00000..000000000",
		"000000.....00000",
		"0000000000000000",
		"0000000000000000",
		"0,0"
	};


	static const char *charset_spec_close_bracket[] =
	{
		/* width height num_colors chars_per_pixel */
		"    16    16        2            1",
		/* colors */
		"0 c #000000",
		". c #ffffff",
		/* pixels */
        "0000000000000000",
		"0000000000000000",
		"00000.....000000",
		"000000000..00000",
		"000000000..00000",
		"000000000..00000",
		"000000000..00000",
		"0000000000...000",
		"0000000000...000",
		"000000000..00000",
		"000000000..00000",
		"000000000..00000",
		"000000000..00000",
		"000000000..00000",
		"00000.....000000",
		"0000000000000000",
		"0,0"
	};

    static const char *charset_spec_equal[] =
	{
		/* width height num_colors chars_per_pixel */
		"    16    16        2            1",
		/* colors */
		"0 c #000000",
		". c #ffffff",
		/* pixels */
        "0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"00............00",
		"00............00",
		"0000000000000000",
		"0000000000000000",
		"00............00",
		"00............00",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
		"0000000000000000",
        "0000000000000000",
		"0,0"
	};


    static const char *charset_spec_lower[] =
	{
		/* width height num_colors chars_per_pixel */
		"    16    16        2            1",
		/* colors */
		"0 c #000000",
		". c #ffffff",
		/* pixels */
        "0000000000000000",
		"0000000000000000",
		"00000000000...00",
		"000000000...0000",
		"0000000...000000",
		"00000...00000000",
		"000...0000000000",
		"0...000000000000",
		"0...000000000000",
		"000...0000000000",
		"00000...00000000",
		"0000000...000000",
		"000000000...0000",
		"00000000000...00",
		"0000000000000000",
        "0000000000000000",
		"0,0"
	};

    static const char *charset_spec_greater[] =
	{
		/* width height num_colors chars_per_pixel */
		"    16    16        2            1",
		/* colors */
		"0 c #000000",
		". c #ffffff",
		/* pixels */
        "0000000000000000",
		"0000000000000000",
		"0...000000000000",
		"000...0000000000",
		"00000...00000000",
		"0000000...000000",
		"000000000...0000",
		"00000000000...00",
		"00000000000...00",
		"000000000...0000",
		"0000000...000000",
		"00000...00000000",
		"000...0000000000",
		"0...000000000000",
		"0000000000000000",
        "0000000000000000",
		"0,0"
	};
#endif // SPECIAL
